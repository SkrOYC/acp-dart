import 'package:json_annotation/json_annotation.dart';

import 'content_block_converter.dart';
import 'embedded_resource_converter.dart';
import 'session_update_converter.dart';
import 'tool_call_content_converter.dart';
import 'mcp_server_converter.dart';
import 'request_permission_converter.dart';
part 'schema.g.dart';

/// Base class for all MCP Server definitions (HTTP, SSE, Stdio).
abstract class McpServerBase {}

/// The sender or recipient of messages and data in a conversation.
///
/// Roles help identify whether content originated from the user, the AI assistant,
/// or other participants in the conversation. This is essential for maintaining
/// proper context and attribution in multi-turn conversations.
///
/// See protocol docs: [Content](https://agentclientprotocol.com/protocol/content)
enum Role {
  /// Content generated by an AI assistant or agent
  assistant,

  /// Content provided by the human user
  user,
}

/// Categories of tools that can be invoked.
///
/// Tool kinds help clients choose appropriate icons and optimize how they
/// display tool execution progress. Different tool kinds may have different
/// permission requirements and user interaction patterns.
///
/// See protocol docs: [Creating](https://agentclientprotocol.com/protocol/tool-calls#creating)
enum ToolKind {
  /// Tools that read or access data without modification
  read,

  /// Tools that modify existing files or data
  edit,

  /// Tools that remove files or data
  delete,

  /// Tools that relocate files or data
  move,

  /// Tools that search for information
  search,

  /// Tools that execute commands or run processes
  execute,

  /// Tools that perform internal reasoning (may not require user permission)
  think,

  /// Tools that retrieve data from external sources
  fetch,

  /// Tools that change the agent's operational mode
  @JsonValue('switch_mode')
  switchMode,

  /// Tools that don't fit other categories
  other,
}

/// Execution status of a tool call.
///
/// Tool calls progress through different statuses during their lifecycle.
/// Clients use these statuses to provide appropriate feedback to users
/// about the progress of tool execution.
///
/// See protocol docs: [Status](https://agentclientprotocol.com/protocol/tool-calls#status)
enum ToolCallStatus {
  /// Tool call has been created but not yet started
  pending,

  /// Tool call is currently executing
  @JsonValue('in_progress')
  inProgress,

  /// Tool call completed successfully
  completed,

  /// Tool call failed to complete
  failed,
}

/// Reasons why an agent stops processing a prompt turn.
///
/// See protocol docs: [Stop Reasons](https://agentclientprotocol.com/protocol/prompt-turn#stop-reasons)
enum StopReason {
  /// The turn ended successfully.
  @JsonValue('end_turn')
  endTurn,

  /// The turn ended because the agent reached the maximum number of tokens.
  @JsonValue('max_tokens')
  maxTokens,

  /// The turn ended because the agent reached the maximum number of allowed
  /// agent requests between user turns.
  @JsonValue('max_turn_requests')
  maxTurnRequests,

  /// The turn ended because the agent refused to continue. The user prompt
  /// and everything that comes after it won't be included in the next
  /// prompt, so this should be reflected in the UI.
  refusal,

  /// The turn was cancelled by the client via `session/cancel`.
  @JsonValue('cancelled')
  cancelled,
}

@JsonSerializable()
class InitializeRequest {
  final num protocolVersion;
  @JsonKey(name: 'clientCapabilities')
  final ClientCapabilities? capabilities;

  InitializeRequest({
    required this.protocolVersion,
    this.capabilities,
  });

  factory InitializeRequest.fromJson(Map<String, dynamic> json) =>
      _$InitializeRequestFromJson(json);

  Map<String, dynamic> toJson() => _$InitializeRequestToJson(this);
}

@JsonSerializable()
class ClientCapabilities {
  final FileSystemCapability? fs;
  final bool? terminal;

  ClientCapabilities({this.fs, this.terminal});

  factory ClientCapabilities.fromJson(Map<String, dynamic> json) =>
      _$ClientCapabilitiesFromJson(json);

  Map<String, dynamic> toJson() => _$ClientCapabilitiesToJson(this);
}

@JsonSerializable()
class FileSystemCapability {
  final bool readTextFile;
  final bool writeTextFile;
  final bool deleteFile;
  final bool listDirectory;
  final bool makeDirectory;
  final bool moveFile;

  FileSystemCapability({
    required this.readTextFile,
    required this.writeTextFile,
    required this.deleteFile,
    required this.listDirectory,
    required this.makeDirectory,
    required this.moveFile,
  });

  factory FileSystemCapability.fromJson(Map<String, dynamic> json) =>
      _$FileSystemCapabilityFromJson(json);

  Map<String, dynamic> toJson() => _$FileSystemCapabilityToJson(this);
}

@JsonSerializable()
class AuthenticateRequest {
  final String method;
  final String? token;

  AuthenticateRequest({required this.method, this.token});

  factory AuthenticateRequest.fromJson(Map<String, dynamic> json) =>
      _$AuthenticateRequestFromJson(json);

  Map<String, dynamic> toJson() => _$AuthenticateRequestToJson(this);
}

@JsonSerializable()
class NewSessionRequest {
  final String cwd;
  @McpServerConverter()
  final List<McpServerBase> mcpServers;

  NewSessionRequest({required this.cwd, required this.mcpServers});

  factory NewSessionRequest.fromJson(Map<String, dynamic> json) =>
      _$NewSessionRequestFromJson(json);

  Map<String, dynamic> toJson() => _$NewSessionRequestToJson(this);
}

@JsonSerializable()
class HttpSseMcpServer extends McpServerBase {
  final String type;
  final String host;
  final int port;
  final bool tls;
  final List<HttpHeader>? headers;

  HttpSseMcpServer({
    required this.type,
    required this.host,
    required this.port,
    required this.tls,
    this.headers,
  });

  factory HttpSseMcpServer.fromJson(Map<String, dynamic> json) =>
      _$HttpSseMcpServerFromJson(json);

  Map<String, dynamic> toJson() => _$HttpSseMcpServerToJson(this);
}

@JsonSerializable()
class HttpHeader {
  final String name;
  final String value;

  HttpHeader({required this.name, required this.value});

  factory HttpHeader.fromJson(Map<String, dynamic> json) =>
      _$HttpHeaderFromJson(json);

  Map<String, dynamic> toJson() => _$HttpHeaderToJson(this);
}

@JsonSerializable()
class Stdio extends McpServerBase {
  @JsonKey(defaultValue: 'stdio')
  final String type = 'stdio';
  final List<String> command;
  final List<EnvVariable>? env;

  Stdio({required this.command, this.env});

  factory Stdio.fromJson(Map<String, dynamic> json) => _$StdioFromJson(json);

  Map<String, dynamic> toJson() => _$StdioToJson(this);
}

@JsonSerializable()
class EnvVariable {
  final String name;
  final String value;

  EnvVariable({required this.name, required this.value});

  factory EnvVariable.fromJson(Map<String, dynamic> json) =>
      _$EnvVariableFromJson(json);

  Map<String, dynamic> toJson() => _$EnvVariableToJson(this);
}

@JsonSerializable()
class LoadSessionRequest {
  final String sessionId;

  LoadSessionRequest({required this.sessionId});

  factory LoadSessionRequest.fromJson(Map<String, dynamic> json) =>
      _$LoadSessionRequestFromJson(json);

  Map<String, dynamic> toJson() => _$LoadSessionRequestToJson(this);
}

@JsonSerializable()
class SetSessionModeRequest {
  final String mode;

  SetSessionModeRequest({required this.mode});

  factory SetSessionModeRequest.fromJson(Map<String, dynamic> json) =>
      _$SetSessionModeRequestFromJson(json);

  Map<String, dynamic> toJson() => _$SetSessionModeRequestToJson(this);
}

@JsonSerializable()
class PromptRequest {
  /// The ID of the session this prompt belongs to
  final String sessionId;

  /// Structured content blocks representing the user's message
  @ContentBlockConverter()
  final List<ContentBlock>? prompt;

  /// Tools available for the agent to use during this prompt
  final List<ToolCall>? tools;

  /// Request parameters for sending a user prompt to the agent.
  ///
  /// Contains the user's message and any additional context or tools.
  /// The agent will process this prompt and return a response with the
  /// stop reason and any generated content or tool calls.
  ///
  /// See protocol docs: [User Message](https://agentclientprotocol.com/protocol/prompt-turn#1-user-message)
  PromptRequest({required this.sessionId, this.prompt, this.tools});

  factory PromptRequest.fromJson(Map<String, dynamic> json) =>
      _$PromptRequestFromJson(json);

  Map<String, dynamic> toJson() => _$PromptRequestToJson(this);
}

/// Content produced by a user or agent.
///
/// This structure is compatible with the Model Context Protocol (MCP), enabling
/// agents to seamlessly forward content from MCP tool outputs without transformation.
///
/// See protocol docs: [Content](https://agentclientprotocol.com/protocol/content)
abstract class ContentBlock {}

@JsonSerializable()
class TextContentBlock extends ContentBlock {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final Annotations? annotations;
  final String text;
  @JsonKey(name: 'type')
  final String type;

  TextContentBlock({
    this.meta,
    this.annotations,
    required this.text,
    this.type = 'text',
  });

  factory TextContentBlock.fromJson(Map<String, dynamic> json) =>
      _$TextContentBlockFromJson(json);

  Map<String, dynamic> toJson() => _$TextContentBlockToJson(this);

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TextContentBlock &&
          runtimeType == other.runtimeType &&
          meta == other.meta &&
          annotations == other.annotations &&
          text == other.text &&
          type == other.type;

  @override
  int get hashCode => Object.hash(meta, annotations, text, type);
}

@JsonSerializable()
class ImageContentBlock extends ContentBlock {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final Annotations? annotations;
  final String data;
  final String mimeType;
  final String? uri;
  @JsonKey(name: 'type')
  final String type;

  ImageContentBlock({
    this.meta,
    this.annotations,
    required this.data,
    required this.mimeType,
    this.uri,
    this.type = 'image',
  });

  factory ImageContentBlock.fromJson(Map<String, dynamic> json) =>
      _$ImageContentBlockFromJson(json);

  Map<String, dynamic> toJson() => _$ImageContentBlockToJson(this);

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ImageContentBlock &&
          runtimeType == other.runtimeType &&
          meta == other.meta &&
          annotations == other.annotations &&
          data == other.data &&
          mimeType == other.mimeType &&
          uri == other.uri &&
          type == other.type;

  @override
  int get hashCode => Object.hash(meta, annotations, data, mimeType, uri, type);
}

@JsonSerializable()
class AudioContentBlock extends ContentBlock {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final Annotations? annotations;
  final String data;
  final String mimeType;
  final String type;

  AudioContentBlock({
    this.meta,
    this.annotations,
    required this.data,
    required this.mimeType,
  }) : type = 'audio';

  factory AudioContentBlock.fromJson(Map<String, dynamic> json) =>
      _$AudioContentBlockFromJson(json);

  Map<String, dynamic> toJson() => _$AudioContentBlockToJson(this);
}

@JsonSerializable()
class ResourceLinkContentBlock extends ContentBlock {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final Annotations? annotations;
  final String? description;
  final String? mimeType;
  final String name;
  final int? size;
  final String? title;
  final String uri;
  @JsonKey(name: 'type')
  final String type;

  ResourceLinkContentBlock({
    this.meta,
    this.annotations,
    this.description,
    this.mimeType,
    required this.name,
    this.size,
    this.title,
    required this.uri,
    this.type = 'resource_link',
  });

  factory ResourceLinkContentBlock.fromJson(Map<String, dynamic> json) =>
      _$ResourceLinkContentBlockFromJson(json);

  Map<String, dynamic> toJson() => _$ResourceLinkContentBlockToJson(this);

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ResourceLinkContentBlock &&
          runtimeType == other.runtimeType &&
          meta == other.meta &&
          annotations == other.annotations &&
          description == other.description &&
          mimeType == other.mimeType &&
          name == other.name &&
          size == other.size &&
          title == other.title &&
          uri == other.uri &&
          type == other.type;

  @override
  int get hashCode => Object.hash(
    meta,
    annotations,
    description,
    mimeType,
    name,
    size,
    title,
    uri,
    type,
  );
}

@JsonSerializable()
class ResourceContentBlock extends ContentBlock {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final Annotations? annotations;
  @EmbeddedResourceResourceConverter()
  final EmbeddedResourceResource resource;
  @JsonKey(name: 'type')
  final String type;

  ResourceContentBlock({
    this.meta,
    this.annotations,
    required this.resource,
    this.type = 'resource',
  });

  factory ResourceContentBlock.fromJson(Map<String, dynamic> json) =>
      _$ResourceContentBlockFromJson(json);

  Map<String, dynamic> toJson() => _$ResourceContentBlockToJson(this);
}

@JsonSerializable()
class ToolCall {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  @ToolCallContentConverter()
  final List<ToolCallContent>? content;
  final ToolKind? kind;
  final List<ToolCallLocation>? locations;
  final Map<String, dynamic>? rawInput;
  final Map<String, dynamic>? rawOutput;
  final ToolCallStatus? status;
  final String title;
  final String toolCallId;

  ToolCall({
    this.meta,
    this.content,
    this.kind,
    this.locations,
    this.rawInput,
    this.rawOutput,
    this.status,
    required this.title,
    required this.toolCallId,
  });

  factory ToolCall.fromJson(Map<String, dynamic> json) =>
      _$ToolCallFromJson(json);

  Map<String, dynamic> toJson() => _$ToolCallToJson(this);
}

@JsonSerializable()
class SetSessionModelRequest {
  final String model;

  SetSessionModelRequest({required this.model});

  factory SetSessionModelRequest.fromJson(Map<String, dynamic> json) =>
      _$SetSessionModelRequestFromJson(json);

  Map<String, dynamic> toJson() => _$SetSessionModelRequestToJson(this);
}

@JsonSerializable()
class WriteTextFileRequest {
  final String sessionId;
  final String path;
  final String content;

  WriteTextFileRequest({required this.sessionId, required this.path, required this.content});

  factory WriteTextFileRequest.fromJson(Map<String, dynamic> json) =>
      _$WriteTextFileRequestFromJson(json);

  Map<String, dynamic> toJson() => _$WriteTextFileRequestToJson(this);
}

@JsonSerializable()
class ReadTextFileRequest {
  final String sessionId;
  final String path;
  final int? line;
  final int? limit;

  ReadTextFileRequest({required this.sessionId, required this.path, this.line, this.limit});

  factory ReadTextFileRequest.fromJson(Map<String, dynamic> json) =>
      _$ReadTextFileRequestFromJson(json);

  Map<String, dynamic> toJson() => _$ReadTextFileRequestToJson(this);
}

@JsonSerializable()
class DeleteFileRequest {
  final String sessionId;
  final String path;

  DeleteFileRequest({required this.sessionId, required this.path});

  factory DeleteFileRequest.fromJson(Map<String, dynamic> json) =>
      _$DeleteFileRequestFromJson(json);

  Map<String, dynamic> toJson() => _$DeleteFileRequestToJson(this);
}

@JsonSerializable()
class DeleteFileResponse {
  DeleteFileResponse();

  factory DeleteFileResponse.fromJson(Map<String, dynamic> json) =>
      _$DeleteFileResponseFromJson(json);

  Map<String, dynamic> toJson() => _$DeleteFileResponseToJson(this);
}

@JsonSerializable()
class MakeDirectoryRequest {
  final String sessionId;
  final String path;

  MakeDirectoryRequest({required this.sessionId, required this.path});

  factory MakeDirectoryRequest.fromJson(Map<String, dynamic> json) =>
      _$MakeDirectoryRequestFromJson(json);

  Map<String, dynamic> toJson() => _$MakeDirectoryRequestToJson(this);
}

@JsonSerializable()
class MakeDirectoryResponse {
  MakeDirectoryResponse();

  factory MakeDirectoryResponse.fromJson(Map<String, dynamic> json) =>
      _$MakeDirectoryResponseFromJson(json);

  Map<String, dynamic> toJson() => _$MakeDirectoryResponseToJson(this);
}

@JsonSerializable()
class MoveFileRequest {
  final String sessionId;
  final String fromPath;
  final String toPath;

  MoveFileRequest({required this.sessionId, required this.fromPath, required this.toPath});

  factory MoveFileRequest.fromJson(Map<String, dynamic> json) =>
      _$MoveFileRequestFromJson(json);

  Map<String, dynamic> toJson() => _$MoveFileRequestToJson(this);
}

@JsonSerializable()
class MoveFileResponse {
  MoveFileResponse();

  factory MoveFileResponse.fromJson(Map<String, dynamic> json) =>
      _$MoveFileResponseFromJson(json);

  Map<String, dynamic> toJson() => _$MoveFileResponseToJson(this);
}

@JsonSerializable()
class ListDirectoryRequest {
  final String sessionId;
  final String path;

  ListDirectoryRequest({required this.sessionId, required this.path});

  factory ListDirectoryRequest.fromJson(Map<String, dynamic> json) =>
      _$ListDirectoryRequestFromJson(json);

  Map<String, dynamic> toJson() => _$ListDirectoryRequestToJson(this);
}

@JsonSerializable()
class ListDirectoryResponse {
  final List<DirectoryEntry> entries;

  ListDirectoryResponse({required this.entries});

  factory ListDirectoryResponse.fromJson(Map<String, dynamic> json) =>
      _$ListDirectoryResponseFromJson(json);

  Map<String, dynamic> toJson() => _$ListDirectoryResponseToJson(this);
}

@JsonSerializable()
class DirectoryEntry {
  final String name;
  final bool isDirectory;

  DirectoryEntry({required this.name, required this.isDirectory});

  factory DirectoryEntry.fromJson(Map<String, dynamic> json) =>
      _$DirectoryEntryFromJson(json);

  Map<String, dynamic> toJson() => _$DirectoryEntryToJson(this);
}

@JsonSerializable()
class RequestPermissionRequest {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final String sessionId;
  final List<PermissionOption> options;
  final ToolCallUpdate toolCall;

  RequestPermissionRequest({
    this.meta,
    required this.sessionId,
    required this.options,
    required this.toolCall,
  });

  factory RequestPermissionRequest.fromJson(Map<String, dynamic> json) =>
      _$RequestPermissionRequestFromJson(json);

  Map<String, dynamic> toJson() => _$RequestPermissionRequestToJson(this);
}

@JsonSerializable()
class PermissionOption {
  final String id;
  final String title;
  final String? description;

  PermissionOption({required this.id, required this.title, this.description});

  factory PermissionOption.fromJson(Map<String, dynamic> json) =>
      _$PermissionOptionFromJson(json);

  Map<String, dynamic> toJson() => _$PermissionOptionToJson(this);
}

@JsonSerializable()
class ToolCallUpdate {
  @ToolCallContentConverter()
  final List<ToolCallContent>? content;
  final ToolKind? kind;
  final List<ToolCallLocation>? locations;
  final Map<String, dynamic>? rawInput;
  final Map<String, dynamic>? rawOutput;
  final ToolCallStatus? status;
  final String? title;
  final String toolCallId;

  ToolCallUpdate({
    this.content,
    this.kind,
    this.locations,
    this.rawInput,
    this.rawOutput,
    this.status,
    this.title,
    required this.toolCallId,
  });

  factory ToolCallUpdate.fromJson(Map<String, dynamic> json) =>
      _$ToolCallUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$ToolCallUpdateToJson(this);
}

@JsonSerializable()
class CreateTerminalRequest {
  final String sessionId;

  /// The command to execute in the terminal
  final String command;

  /// Arguments to pass to the command
  final List<String>? args;

  /// Working directory for the command (defaults to current directory)
  final String? cwd;

  /// Environment variables to set for the command
  final Map<String, String>? env;

  /// Request to create a new terminal and execute a command.
  ///
  /// Creates a new terminal session and executes the specified command.
  /// Returns a TerminalHandle that can be used to monitor output,
  /// wait for completion, or control the terminal.
  ///
  /// The terminal can also be embedded in tool calls by referencing its ID
  /// in ToolCallContent with type "terminal".
  CreateTerminalRequest({required this.sessionId, required this.command, this.args, this.cwd, this.env});

  factory CreateTerminalRequest.fromJson(Map<String, dynamic> json) =>
      _$CreateTerminalRequestFromJson(json);

  Map<String, dynamic> toJson() => _$CreateTerminalRequestToJson(this);
}

@JsonSerializable()
class TerminalOutputRequest {
  final String sessionId;
  final String terminalId;

  TerminalOutputRequest({required this.sessionId, required this.terminalId});

  factory TerminalOutputRequest.fromJson(Map<String, dynamic> json) =>
      _$TerminalOutputRequestFromJson(json);

  Map<String, dynamic> toJson() => _$TerminalOutputRequestToJson(this);
}

@JsonSerializable()
class ReleaseTerminalRequest {
  final String sessionId;
  final String terminalId;

  ReleaseTerminalRequest({required this.sessionId, required this.terminalId});

  factory ReleaseTerminalRequest.fromJson(Map<String, dynamic> json) =>
      _$ReleaseTerminalRequestFromJson(json);

  Map<String, dynamic> toJson() => _$ReleaseTerminalRequestToJson(this);
}

@JsonSerializable()
class WaitForTerminalExitRequest {
  final String sessionId;
  final String terminalId;

  WaitForTerminalExitRequest({required this.sessionId, required this.terminalId});

  factory WaitForTerminalExitRequest.fromJson(Map<String, dynamic> json) =>
      _$WaitForTerminalExitRequestFromJson(json);

  Map<String, dynamic> toJson() => _$WaitForTerminalExitRequestToJson(this);
}

@JsonSerializable()
class KillTerminalCommandRequest {
  final String sessionId;
  final String terminalId;

  KillTerminalCommandRequest({required this.sessionId, required this.terminalId});

  factory KillTerminalCommandRequest.fromJson(Map<String, dynamic> json) =>
      _$KillTerminalCommandRequestFromJson(json);

  Map<String, dynamic> toJson() => _$KillTerminalCommandRequestToJson(this);
}

@JsonSerializable()
class InitializeResponse {
  final num protocolVersion;
  final AgentCapabilities? capabilities;

  InitializeResponse({
    required this.protocolVersion,
    this.capabilities,
  });

  factory InitializeResponse.fromJson(Map<String, dynamic> json) =>
      _$InitializeResponseFromJson(json);

  Map<String, dynamic> toJson() => _$InitializeResponseToJson(this);
}

@JsonSerializable()
class AgentCapabilities {
  final McpCapabilities? mcp;
  final PromptCapabilities? prompt;
  final bool loadSession;
  final List<AuthMethod> auth;

  AgentCapabilities({
    this.mcp,
    this.prompt,
    required this.loadSession,
    required this.auth,
  });

  factory AgentCapabilities.fromJson(Map<String, dynamic> json) =>
      _$AgentCapabilitiesFromJson(json);

  Map<String, dynamic> toJson() => _$AgentCapabilitiesToJson(this);
}

@JsonSerializable()
class McpCapabilities {
  final List<String> versions;

  McpCapabilities({required this.versions});

  factory McpCapabilities.fromJson(Map<String, dynamic> json) =>
      _$McpCapabilitiesFromJson(json);

  Map<String, dynamic> toJson() => _$McpCapabilitiesToJson(this);
}

@JsonSerializable()
class PromptCapabilities {
  final List<String> sessionModes;

  PromptCapabilities({required this.sessionModes});

  factory PromptCapabilities.fromJson(Map<String, dynamic> json) =>
      _$PromptCapabilitiesFromJson(json);

  Map<String, dynamic> toJson() => _$PromptCapabilitiesToJson(this);
}

@JsonSerializable()
class AuthMethod {
  final String method;
  final String? description;

  AuthMethod({required this.method, this.description});

  factory AuthMethod.fromJson(Map<String, dynamic> json) =>
      _$AuthMethodFromJson(json);

  Map<String, dynamic> toJson() => _$AuthMethodToJson(this);
}

@JsonSerializable()
class AuthenticateResponse {
  AuthenticateResponse();

  factory AuthenticateResponse.fromJson(Map<String, dynamic> json) =>
      _$AuthenticateResponseFromJson(json);

  Map<String, dynamic> toJson() => _$AuthenticateResponseToJson(this);
}

@JsonSerializable()
class NewSessionResponse {
  final String sessionId;
  final SessionModeState? modes;
  final SessionModelState? models;

  NewSessionResponse({
    required this.sessionId,
    this.modes,
    this.models,
  });

  factory NewSessionResponse.fromJson(Map<String, dynamic> json) =>
      _$NewSessionResponseFromJson(json);

  Map<String, dynamic> toJson() => _$NewSessionResponseToJson(this);
}

@JsonSerializable()
class SessionModeState {
  final List<SessionMode> available;
  final String current;

  SessionModeState({required this.available, required this.current});

  factory SessionModeState.fromJson(Map<String, dynamic> json) =>
      _$SessionModeStateFromJson(json);

  Map<String, dynamic> toJson() => _$SessionModeStateToJson(this);
}

@JsonSerializable()
class SessionMode {
  final String id;
  final String name;
  final String? description;

  SessionMode({required this.id, required this.name, this.description});

  factory SessionMode.fromJson(Map<String, dynamic> json) =>
      _$SessionModeFromJson(json);

  Map<String, dynamic> toJson() => _$SessionModeToJson(this);
}

@JsonSerializable()
class SessionModelState {
  final List<ModelInfo> available;
  final String current;

  SessionModelState({required this.available, required this.current});

  factory SessionModelState.fromJson(Map<String, dynamic> json) =>
      _$SessionModelStateFromJson(json);

  Map<String, dynamic> toJson() => _$SessionModelStateToJson(this);
}

@JsonSerializable()
class ModelInfo {
  final String id;
  final String name;
  final String? description;

  ModelInfo({required this.id, required this.name, this.description});

  factory ModelInfo.fromJson(Map<String, dynamic> json) =>
      _$ModelInfoFromJson(json);

  Map<String, dynamic> toJson() => _$ModelInfoToJson(this);
}

@JsonSerializable()
class LoadSessionResponse {
  final String sessionId;
  final SessionModeState modes;
  final SessionModelState? models;
  @ContentBlockConverter()
  final List<ContentBlock> history;

  LoadSessionResponse({
    required this.sessionId,
    required this.modes,
    this.models,
    required this.history,
  });

  factory LoadSessionResponse.fromJson(Map<String, dynamic> json) =>
      _$LoadSessionResponseFromJson(json);

  Map<String, dynamic> toJson() => _$LoadSessionResponseToJson(this);
}

@JsonSerializable()
class SetSessionModeResponse {
  SetSessionModeResponse();

  factory SetSessionModeResponse.fromJson(Map<String, dynamic> json) =>
      _$SetSessionModeResponseFromJson(json);

  Map<String, dynamic> toJson() => _$SetSessionModeResponseToJson(this);
}

@JsonSerializable()
class PromptResponse {
  /// Indicates why the agent stopped processing the turn.
  final StopReason stopReason;

  PromptResponse({required this.stopReason});

  factory PromptResponse.fromJson(Map<String, dynamic> json) =>
      _$PromptResponseFromJson(json);

  Map<String, dynamic> toJson() => _$PromptResponseToJson(this);
}

@JsonSerializable()
class SetSessionModelResponse {
  SetSessionModelResponse();

  factory SetSessionModelResponse.fromJson(Map<String, dynamic> json) =>
      _$SetSessionModelResponseFromJson(json);

  Map<String, dynamic> toJson() => _$SetSessionModelResponseToJson(this);
}

@JsonSerializable()
class WriteTextFileResponse {
  WriteTextFileResponse();

  factory WriteTextFileResponse.fromJson(Map<String, dynamic> json) =>
      _$WriteTextFileResponseFromJson(json);

  Map<String, dynamic> toJson() => _$WriteTextFileResponseToJson(this);
}

@JsonSerializable()
class ReadTextFileResponse {
  final String content;

  ReadTextFileResponse({required this.content});

  factory ReadTextFileResponse.fromJson(Map<String, dynamic> json) =>
      _$ReadTextFileResponseFromJson(json);

  Map<String, dynamic> toJson() => _$ReadTextFileResponseToJson(this);
}

abstract class RequestPermissionOutcome {}

@JsonSerializable()
class CancelledOutcome implements RequestPermissionOutcome {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  @JsonKey(name: 'outcome')
  final String outcome;

  CancelledOutcome({this.meta, this.outcome = 'cancelled'});

  factory CancelledOutcome.fromJson(Map<String, dynamic> json) =>
      _$CancelledOutcomeFromJson(json);

  Map<String, dynamic> toJson() => _$CancelledOutcomeToJson(this);
}

@JsonSerializable()
class SelectedOutcome implements RequestPermissionOutcome {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  @JsonKey(name: 'outcome')
  final String outcome;
  final String optionId;

  SelectedOutcome({
    this.meta,
    this.outcome = 'selected',
    required this.optionId,
  });

  factory SelectedOutcome.fromJson(Map<String, dynamic> json) =>
      _$SelectedOutcomeFromJson(json);

  Map<String, dynamic> toJson() => _$SelectedOutcomeToJson(this);
}

@JsonSerializable()
class RequestPermissionResponse {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  @RequestPermissionOutcomeConverter()
  final RequestPermissionOutcome outcome;

  RequestPermissionResponse({
    this.meta,
    required this.outcome,
  });

  factory RequestPermissionResponse.fromJson(Map<String, dynamic> json) =>
      _$RequestPermissionResponseFromJson(json);

  Map<String, dynamic> toJson() => _$RequestPermissionResponseToJson(this);
}

@JsonSerializable()
class CreateTerminalResponse {
  final String terminalId;

  CreateTerminalResponse({required this.terminalId});

  factory CreateTerminalResponse.fromJson(Map<String, dynamic> json) =>
      _$CreateTerminalResponseFromJson(json);

  Map<String, dynamic> toJson() => _$CreateTerminalResponseToJson(this);
}

@JsonSerializable()
class TerminalOutputResponse {
  final String output;
  final TerminalExitStatus? exitStatus;
  final bool truncated;

  TerminalOutputResponse({required this.output, this.exitStatus, required this.truncated});

  factory TerminalOutputResponse.fromJson(Map<String, dynamic> json) =>
      _$TerminalOutputResponseFromJson(json);

  Map<String, dynamic> toJson() => _$TerminalOutputResponseToJson(this);
}

@JsonSerializable()
class TerminalExitStatus {
  @JsonKey(name: '_meta', includeIfNull: false)
  final Map<String, dynamic>? meta;
  final int? exitCode;
  final String? signal;

  TerminalExitStatus({this.meta, this.exitCode, this.signal});

  factory TerminalExitStatus.fromJson(Map<String, dynamic> json) =>
      _$TerminalExitStatusFromJson(json);

  Map<String, dynamic> toJson() => _$TerminalExitStatusToJson(this);
}

@JsonSerializable()
class ReleaseTerminalResponse {
  ReleaseTerminalResponse();

  factory ReleaseTerminalResponse.fromJson(Map<String, dynamic> json) =>
      _$ReleaseTerminalResponseFromJson(json);

  Map<String, dynamic> toJson() => _$ReleaseTerminalResponseToJson(this);
}

@JsonSerializable()
class WaitForTerminalExitResponse {
  final int? exitCode;
  final String? signal;

  WaitForTerminalExitResponse({this.exitCode, this.signal});

  factory WaitForTerminalExitResponse.fromJson(Map<String, dynamic> json) =>
      _$WaitForTerminalExitResponseFromJson(json);

  Map<String, dynamic> toJson() => _$WaitForTerminalExitResponseToJson(this);
}

@JsonSerializable()
class KillTerminalResponse {
  KillTerminalResponse();

  factory KillTerminalResponse.fromJson(Map<String, dynamic> json) =>
      _$KillTerminalResponseFromJson(json);

  Map<String, dynamic> toJson() => _$KillTerminalResponseToJson(this);
}

/// Notification to cancel ongoing operations for a session.
///
/// See protocol docs: [Cancellation](https://agentclientprotocol.com/protocol/prompt-turn#cancellation)
@JsonSerializable()
class CancelNotification {
  /// The ID of the session to cancel operations for.
  final String sessionId;

  CancelNotification({required this.sessionId});

  factory CancelNotification.fromJson(Map<String, dynamic> json) =>
      _$CancelNotificationFromJson(json);

  Map<String, dynamic> toJson() => _$CancelNotificationToJson(this);
}

/// Optional annotations for the client. The client can use annotations to inform how objects are used or displayed
@JsonSerializable()
class Annotations {
  final List<Role>? audience;
  final String? lastModified;
  final double? priority;

  Annotations({this.audience, this.lastModified, this.priority});

  factory Annotations.fromJson(Map<String, dynamic> json) =>
      _$AnnotationsFromJson(json);

  Map<String, dynamic> toJson() => _$AnnotationsToJson(this);
}

/// Text-based resource contents.
@JsonSerializable()
class TextResourceContents extends EmbeddedResourceResource {
  final String? mimeType;
  final String text;
  final String uri;

  TextResourceContents({this.mimeType, required this.text, required this.uri});

  factory TextResourceContents.fromJson(Map<String, dynamic> json) =>
      _$TextResourceContentsFromJson(json);

  Map<String, dynamic> toJson() => _$TextResourceContentsToJson(this);
}

/// Binary resource contents.
@JsonSerializable()
class BlobResourceContents extends EmbeddedResourceResource {
  final String blob;
  final String? mimeType;
  final String uri;

  BlobResourceContents({required this.blob, this.mimeType, required this.uri});

  factory BlobResourceContents.fromJson(Map<String, dynamic> json) =>
      _$BlobResourceContentsFromJson(json);

  Map<String, dynamic> toJson() => _$BlobResourceContentsToJson(this);
}

/// Resource content that can be embedded in a message.
abstract class EmbeddedResourceResource {}

/// Content produced by a tool call.
///
/// Tool calls can produce different types of content including
/// standard content blocks (text, images) or file diffs.
///
/// See protocol docs: [Content](https://agentclientprotocol.com/protocol/tool-calls#content)
abstract class ToolCallContent {}

@JsonSerializable()
class ContentToolCallContent extends ToolCallContent {
  @ContentBlockConverter()
  final ContentBlock content;

  ContentToolCallContent({required this.content});

  factory ContentToolCallContent.fromJson(Map<String, dynamic> json) =>
      _$ContentToolCallContentFromJson(json);

  Map<String, dynamic> toJson() => _$ContentToolCallContentToJson(this);
}

@JsonSerializable()
class DiffToolCallContent extends ToolCallContent {
  final String newText;
  final String? oldText;
  final String path;

  DiffToolCallContent({
    required this.newText,
    this.oldText,
    required this.path,
  });

  factory DiffToolCallContent.fromJson(Map<String, dynamic> json) =>
      _$DiffToolCallContentFromJson(json);

  Map<String, dynamic> toJson() => _$DiffToolCallContentToJson(this);
}

@JsonSerializable()
class TerminalToolCallContent extends ToolCallContent {
  final String terminalId;

  TerminalToolCallContent({required this.terminalId});

  factory TerminalToolCallContent.fromJson(Map<String, dynamic> json) =>
      _$TerminalToolCallContentFromJson(json);

  Map<String, dynamic> toJson() => _$TerminalToolCallContentToJson(this);
}

/// A file location being accessed or modified by a tool.
///
/// Enables clients to implement "follow-along" features that track
/// which files the agent is working with in real-time.
///
/// See protocol docs: [Following the Agent](https://agentclientprotocol.com/protocol/tool-calls#following-the-agent)
@JsonSerializable()
class ToolCallLocation {
  /// Optional line number within the file.
  final int? line;

  /// The file path being accessed or modified.
  final String path;

  ToolCallLocation({this.line, required this.path});

  factory ToolCallLocation.fromJson(Map<String, dynamic> json) =>
      _$ToolCallLocationFromJson(json);

  Map<String, dynamic> toJson() => _$ToolCallLocationToJson(this);
}

/// A single entry in the execution plan.
///
/// Represents a task or goal that the assistant intends to accomplish
/// as part of fulfilling the user's request.
/// See protocol docs: [Plan Entries](https://agentclientprotocol.com/protocol/agent-plan#plan-entries)
@JsonSerializable()
class PlanEntry {
  /// Human-readable description of what this task aims to accomplish.
  final String content;

  /// The relative importance of this task.
  /// Used to indicate which tasks are most critical to the overall goal.
  final String priority;

  /// Current execution status of this task.
  final String status;

  PlanEntry({
    required this.content,
    required this.priority,
    required this.status,
  });

  factory PlanEntry.fromJson(Map<String, dynamic> json) =>
      _$PlanEntryFromJson(json);

  Map<String, dynamic> toJson() => _$PlanEntryToJson(this);
}

/// The input specification for a command.
abstract class AvailableCommandInput {}

/// All text that was typed after the command name is provided as input.
@JsonSerializable()
class UnstructuredCommandInput extends AvailableCommandInput {
  /// A hint to display when the input hasn't been provided yet
  final String hint;

  UnstructuredCommandInput({required this.hint});

  factory UnstructuredCommandInput.fromJson(Map<String, dynamic> json) =>
      _$UnstructuredCommandInputFromJson(json);

  Map<String, dynamic> toJson() => _$UnstructuredCommandInputToJson(this);
}

/// Information about a command.
@JsonSerializable()
class AvailableCommand {
  /// Human-readable description of what the command does.
  final String description;

  /// Input for the command if required
  final UnstructuredCommandInput? input;

  /// Command name (e.g., `create_plan`, `research_codebase`).
  final String name;

  AvailableCommand({required this.description, this.input, required this.name});

  factory AvailableCommand.fromJson(Map<String, dynamic> json) =>
      _$AvailableCommandFromJson(json);

  Map<String, dynamic> toJson() => _$AvailableCommandToJson(this);
}

/// Notification containing a session update from the agent.
///
/// Used to stream real-time progress and results during prompt processing.
///
/// See protocol docs: [Agent Reports Output](https://agentclientprotocol.com/protocol/prompt-turn#3-agent-reports-output)
@JsonSerializable()
class SessionNotification {
  /// The ID of the session this update pertains to.
  final String sessionId;

  /// The actual update content.
  @SessionUpdateConverter()
  final SessionUpdate update;

  SessionNotification({required this.sessionId, required this.update});

  factory SessionNotification.fromJson(Map<String, dynamic> json) =>
      _$SessionNotificationFromJson(json);

  Map<String, dynamic> toJson() => _$SessionNotificationToJson(this);
}

@JsonSerializable()
class UserMessageChunkSessionUpdate extends SessionUpdate {
  @ContentBlockConverter()
  final ContentBlock content;

  UserMessageChunkSessionUpdate({required this.content});

  factory UserMessageChunkSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$UserMessageChunkSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$UserMessageChunkSessionUpdateToJson(this);
}

@JsonSerializable()
class AgentMessageChunkSessionUpdate extends SessionUpdate {
  @ContentBlockConverter()
  final ContentBlock content;

  AgentMessageChunkSessionUpdate({required this.content});

  factory AgentMessageChunkSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$AgentMessageChunkSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$AgentMessageChunkSessionUpdateToJson(this);
}

@JsonSerializable()
class AgentThoughtChunkSessionUpdate extends SessionUpdate {
  @ContentBlockConverter()
  final ContentBlock content;

  AgentThoughtChunkSessionUpdate({required this.content});

  factory AgentThoughtChunkSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$AgentThoughtChunkSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$AgentThoughtChunkSessionUpdateToJson(this);
}

abstract class SessionUpdate {}

@JsonSerializable()
class ToolCallSessionUpdate extends SessionUpdate {
  @ToolCallContentConverter()
  final List<ToolCallContent>? content;
  final ToolKind? kind;
  final List<ToolCallLocation>? locations;
  final Map<String, dynamic>? rawInput;
  final Map<String, dynamic>? rawOutput;
  final ToolCallStatus? status;
  final String title;
  final String toolCallId;

  ToolCallSessionUpdate({
    this.content,
    this.kind,
    this.locations,
    this.rawInput,
    this.rawOutput,
    this.status,
    required this.title,
    required this.toolCallId,
  });

  factory ToolCallSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$ToolCallSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$ToolCallSessionUpdateToJson(this);
}

@JsonSerializable()
class ToolCallUpdateSessionUpdate extends SessionUpdate {
  @ToolCallContentConverter()
  final List<ToolCallContent>? content;
  final ToolKind? kind;
  final List<ToolCallLocation>? locations;
  final Map<String, dynamic>? rawInput;
  final Map<String, dynamic>? rawOutput;
  final ToolCallStatus? status;
  final String? title;
  final String toolCallId;

  ToolCallUpdateSessionUpdate({
    this.content,
    this.kind,
    this.locations,
    this.rawInput,
    this.rawOutput,
    this.status,
    this.title,
    required this.toolCallId,
  });

  factory ToolCallUpdateSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$ToolCallUpdateSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$ToolCallUpdateSessionUpdateToJson(this);
}

@JsonSerializable()
class PlanSessionUpdate extends SessionUpdate {
  final List<PlanEntry> entries;

  PlanSessionUpdate({required this.entries});

  factory PlanSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$PlanSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$PlanSessionUpdateToJson(this);
}

@JsonSerializable()
class AvailableCommandsUpdateSessionUpdate extends SessionUpdate {
  final List<AvailableCommand> availableCommands;

  AvailableCommandsUpdateSessionUpdate({required this.availableCommands});

  factory AvailableCommandsUpdateSessionUpdate.fromJson(
    Map<String, dynamic> json,
  ) => _$AvailableCommandsUpdateSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() =>
      _$AvailableCommandsUpdateSessionUpdateToJson(this);
}

@JsonSerializable()
class CurrentModeUpdateSessionUpdate extends SessionUpdate {
  final String currentModeId;

  CurrentModeUpdateSessionUpdate({required this.currentModeId});

  factory CurrentModeUpdateSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$CurrentModeUpdateSessionUpdateFromJson(json);

  Map<String, dynamic> toJson() => _$CurrentModeUpdateSessionUpdateToJson(this);
}



@JsonSerializable()
class UnknownSessionUpdate extends SessionUpdate {
  final Map<String, dynamic> rawJson;
  UnknownSessionUpdate({required this.rawJson});
  factory UnknownSessionUpdate.fromJson(Map<String, dynamic> json) =>
      _$UnknownSessionUpdateFromJson(json);
  Map<String, dynamic> toJson() => _$UnknownSessionUpdateToJson(this);
}

/// Protocol method constants for agent-side requests
const agentMethods = {
  'authenticate': 'authenticate',
  'initialize': 'initialize',
  'modelSelect': 'session/set_model',
  'sessionCancel': 'session/cancel',
  'sessionLoad': 'session/load',
  'sessionNew': 'session/new',
  'sessionPrompt': 'session/prompt',
  'sessionSetMode': 'session/set_mode',
};

/// Protocol method constants for client-side requests
const clientMethods = {
  'fsReadTextFile': 'fs/read_text_file',
  'fsWriteTextFile': 'fs/write_text_file',
  'fsDeleteFile': 'fs/delete_file',
  'fsListDirectory': 'fs/list_directory',
  'fsMakeDirectory': 'fs/make_directory',
  'fsMoveFile': 'fs/move_file',
  'sessionRequestPermission': 'session/request_permission',
  'sessionUpdate': 'session/update',
  'terminalCreate': 'terminal/create',
  'terminalKill': 'terminal/kill',
  'terminalOutput': 'terminal/output',
  'terminalRelease': 'terminal/release',
  'terminalWaitForExit': 'terminal/wait_for_exit',
};
